package com.yulun.controller.count;

import com.alibaba.fastjson.JSONObject;
import com.fh.entity.Page;
import com.fh.util.PageData;
import com.xxgl.service.mng.ZxlbManager;
import com.yulun.controller.api.CommonIntefate;
import com.yulun.service.PersonCountManager;
import com.yulun.service.ServiceCountManager;
import com.yulun.utils.TimeHandle;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @Author Aliar
 * @Time 2020-05-25 17:51
 **/
public class ServiceCountWeb implements CommonIntefate {
        static final String SUCCESS = "success";
        static final String MSG = "msg";
        static final String FALSE = "false";
        static final String TRUE = "true";
        Integer pageIndex;
        Integer pageSize;

        @Resource(name = "zxlbService")
        private ZxlbManager zxlbService;

        @Resource(name = "serviceCountService")
        private ServiceCountManager serviceCountService;


        @Override
        public JSONObject execute(JSONObject data, HttpServletRequest request) throws Exception {
                JSONObject object = new JSONObject();
                PageData pd = new PageData();
                String cmd = data.getString("cmd") == null ? "" : data.getString("cmd");
                PageData pd_stoken = new PageData();
                JSONObject json = data.getJSONObject("data");
                pd_stoken.put("TOKENID", json.get("tokenid"));
                try {
                        PageData pd_token = zxlbService.findByTokenId(pd_stoken);
                        if (null == pd_token) {
                                object.put(SUCCESS, FALSE);
                                object.put(MSG, "登陆超时请重新登陆");
                                return object;
                        }

                        if ("personCount".equals(cmd)) {
                                String startTime = json.getString("startTime");
                                String endTime = json.getString("endTime");
                                String timeSlot = json.getString("timeSlot");
                                // 判空  等于1才能正常运行
                                double isNull = 0d;
                                if (timeSlot != null && !"".equals(timeSlot)) {
                                        isNull += 1d;
                                }
                                if (startTime != null && !"".equals(startTime)) {
                                        isNull += 0.5d;
                                }
                                if (endTime != null && !"".equals(endTime)) {
                                        isNull += 0.5d;
                                }
                                Page page = new Page();
                                page.setShowCount(50);
                                page.setCurrentPage(1);
                                if (isNull < 1d) {
                                        object.put(SUCCESS, FALSE);
                                        object.put(MSG, "StartTime and endTime or timeSlot is NULL");
                                        return object;
                                } else if (isNull == 2d || isNull == 1.5d) {
                                        object.put(SUCCESS, FALSE);
                                        object.put(MSG, "StartTime and endTime and timeSlot Can't together");
                                        return object;
                                }
                                // 传值
                                if (timeSlot == null || "".equals(timeSlot)) {
                                        pd.put("startTime", startTime);
                                        pd.put("endTime", TimeHandle.endTimeHeandle(endTime));
                                } else {
                                        Map<String, String> time = TimeHandle.getCountTime(timeSlot);
                                        String msg = time.get("msg");
                                        if (msg != null && !"".equals(msg)) {
                                                object.put(MSG, msg);
                                                object.put(SUCCESS, FALSE);
                                                return object;
                                        }
                                        startTime = time.get("startTime");
                                        endTime = time.get("endTime");
                                        pd.put("startTime", startTime);
                                        pd.put("endTime", endTime);
                                }
                                page.setPd(pd);
                              //业务总量
                               PageData serviceCount =  serviceCountService.serviceCount(pd);
                               pd.putAll(serviceCount);




                                object.put("data",pd);

                        }

                } catch (Exception e) {
                        object.put(SUCCESS, FALSE);
                        object.put(MSG, "数据异常");

                } finally {
                        return object;
                }
        }
}
