<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="JobReferMapper">
	<select id="recruitlistPage" parameterType="page" resultType="pd">
		SELECT a.*,b.name,b.qytype,b.addr,b.email,b.lxr,b.tel,b.lxtel,b.bylxr,b.bylxtel
		FROM tesp_employreg a
		LEFT JOIN tesp_company b
		ON a.uid=b.uid
		WHERE isvalid='1'
		<if test="pd.name!=null and pd.name!=''">
			and a.name=#{pd.name}
		</if>
		<if test="pd.jobname!=null and pd.jobname!=''">
			and b.jobname=#{pd.jobname}
		</if>
		<if test="pd.jobtype!=null and pd.jobtype!=''">
			and b.jobtype=#{pd.jobtype}
		</if>
		<if test="pd.gzdy!=null and pd.gzdy!=''">
			and b.gzdy=#{pd.gzdy}
		</if>
		<if test="pd.keywords != null and pd.keywords != ''">
			AND (
			a.qytype LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') OR
			a.name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') OR
			a.addr LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') OR
			a.email LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') OR
			a.lxr LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') OR
			a.tel LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') OR
			a.lxtel LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') OR
			a.bylxr LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') OR
			a.bylxtel LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or
			b.jobname LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or
			b.jobtype LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or
			b.xl LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or
			b.zyyq LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or
			b.remark LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or
			b.zgrs LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or
			b.age LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or
			b.gzdy LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or
			b.gwyq LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or
			b.xlyq LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>
	</select>

	<select id="getjoblistPage" resultType="pd" parameterType="page">
		SELECT a.*,b.sex,b.name,b.addr,b.email,b.tel,b.lxtel,b.age,b.jg,b.isjob,b.xl,b.zy,b.cardid
		FROM tesp_jobreg a
		LEFT JOIN tesp_person b
		ON a.uid=b.uid
		WHERE isvalid='1'
		<if test="pd.name!=null and pd.name!=''">
			and b.name=#{pd.name}
		</if>
		<if test="pd.age!=null and pd.age!=''">
			and b.age=#{pd.age}
		</if>
		<if test="pd.sex!=null and pd.sex!=''">
			and b.sex=#{pd.sex}
		</if>
		<if test="pd.xl!=null and pd.xl!=''">
			and b.xl=#{pd.xl}
		</if>
		<if test="pd.isjob!=null and pd.isjob!=''">
			and b.isjob=#{pd.isjob}
		</if>
		<if test="pd.jobtype!=null and pd.jobtype!=''">
			and a.jobtype=#{pd.jobtype}
		</if>
		<if test="pd.jobname!=null and pd.jobname!=''">
			and a.jobname=#{pd.jobname}
		</if>
		<if test="pd.qwxz!=null and pd.qwxz!=''">
			and a.qwxz=#{pd.qwxz}
		</if>
		order by a.id desc
	</select>

	<insert id="insertperson" parameterType="pd">
		INSERT INTO tesp_person(
			uid,
			sex,
			name,
			addr,
			email,
			tel,
			lxtel,
			age,
			jg,
			czman,
			czdate,
			isjob,
			xl,
			zy,
			cardid
		)VALUES (
			#{uid},
			#{sex},
			#{name},
			#{addr},
			#{email},
			#{tel},
			#{lxtel},
			#{age},
			#{jg},
			#{czman},
			#{czdate},
			#{isjob},
			#{xl},
			#{zy},
			#{cardid}
		)
	</insert>

	<update id="updateperson" parameterType="pd">
		UPDATE tesp_person
		set
		uid=#{uid},
		sex=#{sex},
		name=#{name},
		addr=#{addr},
		email=#{email},
		tel=#{tel},
		lxtel=#{lxtel},
		age=#{age},
		jg=#{jg},
		czman=#{czman},
		czdate=#{czdate},
		isjob=#{isjob},
		xl=#{xl},
		zy=#{zy},
		cardid=#{cardid}
		WHERE id=#{id}
	</update>

	<delete id="deleteperson" parameterType="pd">
		DELETE FROM tesp_person WHERE id=#{id}
	</delete>

	<select id="findjoblistPage" resultType="pd" parameterType="page">
		select
		a.*,
		b.gwflname
		from tesp_jobreg a left join tesp_jobtype b on a.jobname=b.code
		where 1=1
		<if test="pd.uid!=null and pd.uid!=''">
			and uid=#{pd.uid}
		</if>
		<if test="pd.id!=null and pd.id!=''">
			and id=#{pd.id}
		</if>
	</select>

	<insert id="insertjobreg" parameterType="pd">
		INSERT INTO tesp_jobreg(
			jobname,
			jobtype,
			qwxz,
			jobaddr,
			remark,
			czman,
			uid,
			czdate,
			isvalid
		)VALUES (
			#{jobname},
			#{jobtype},
			#{qwxz},
			#{jobaddr},
			#{remark},
			#{czman},
			#{uid},
			#{czdate},
			#{isvalid}
		)
	</insert>

	<update id="updatejobreg" parameterType="pd">
		UPDATE tesp_jobreg
		set
		jobname=#{jobname},
		jobtype=#{jobtype},
		qwxz=#{qwxz},
		jobaddr=#{jobaddr},
		remark=#{remark},
		czman=#{czman},
		uid=#{uid},
		czdate=#{czdate},
		isvalid=#{isvalid}
		WHERE id=#{id}
	</update>

	<delete id="deletejobreg" parameterType="pd">
		DELETE FROM tesp_jobreg WHERE id=#{id}
	</delete>

	<select id="findperson" resultType="pd" parameterType="pd">
		select
		*
		from tesp_person
		where 1=1
		<if test="uid!=null and uid!=''">
			and uid=#{uid}
		</if>
		<if test="tel!=null and tel!=''">
			and tel=#{tel}
		</if>
	</select>

	<select id="PersonreferlistPage" parameterType="page" resultType="pd">
		SELECT c.*,d.istj
		FROM (SELECT a.sex,a.name,a.xl,a.zy,a.tel,b.* FROM tesp_jobreg b LEFT JOIN tesp_person a ON a.uid=b.uid) c
		LEFT JOIN tesp_tj d
		ON c.uid=d.regid
		WHERE d.uid=#{pd.uid}
		AND d.istj='1'
	</select>

	<select id="JobreferlistPage" resultType="pd" parameterType="page">
		SELECT c.*,d.istj
		FROM (SELECT a.name,a.lxr,a.addr,a.tel,b.* FROM tesp_employreg b LEFT JOIN tesp_company a ON a.uid=b.uid) c
		LEFT JOIN tesp_tj d
		ON c.uid=d.regid
		WHERE d.uid=#{pd.uid}
		AND d.istj='1'
	</select>

	<select id="findaddrlistPage" parameterType="page" resultType="pd">
		select * from tesp_addrlist
	</select>

	<insert id="insertaddr" parameterType="pd">
		INSERT INTO tesp_addrlist(
			name,
			tel1,
			tel2
		)VALUES (
			#{name},
			#{tel1},
			#{tel2}
		)
	</insert>

</mapper>