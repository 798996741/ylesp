<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CompanyMapper">
	
	<!--表名 -->
	<sql id="tableName">
		tesp_company
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		uid,
		qytype,
		name,
		addr,
		email,
		lxr,
		tel,
		lxtel,
		bylxr,
		bylxtel,
		czman,
		czdate,
		isinsuran,
		qzqd,
		intro
				
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{uid},
		#{qytype},
		#{name},
		#{addr},
		#{email},
		#{lxr},
		#{tel},
		#{lxtel},
		#{bylxr},
		#{bylxtel},
		#{czman},
		now(),
		#{isinsuran},
		#{qzqd},
		#{intro}
	</sql>
	
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	
	
	<!-- 批量删除 -->
	<update id="deleteAll" parameterType="String">
		delete from 
			<include refid="tableName"></include>
		where 
			find_in_set(uid,#{uid})
	</update>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
			<include refid="tableName"></include>
		set 
  			qytype=#{qytype},
			name=#{name},
			addr=#{addr},
			email=#{email},
			lxr=#{lxr},
			tel=#{tel},
			lxtel=#{lxtel},
			bylxr=#{bylxr},
			bylxtel=#{bylxtel},
			czman=#{czman},
			isinsuran=#{isinsuran},
			intro=#{intro},
			qzqd=#{qzqd},
			czdate=now(),
			isimpot=''
		where 
		uid = #{uid}
	</update>
	
	
	
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select 
			a.uid,
			a.qytype,
			a.name,
			a.addr,
			a.email,
			a.lxr,
			a.tel,
			a.lxtel,
			a.bylxr,
			a.bylxtel,
			a.czman,
			a.isinsuran,
			a.intro,
			a.qzqd,
			DATE_FORMAT(a.czdate,"%Y-%m-%d %T") as czdate,
			b.name as qytypename,
			c.zxxm as czname,
		IFNULL((SELECT (CASE WHEN re.result='0' THEN '未回访' WHEN re.result IS NULL THEN '未回访' WHEN re.result='1' THEN '已回访' ELSE '未回访' END )
		FROM tesp_revrecord re WHERE re.uid IS NOT NULL  AND a.uid=re.uid ORDER BY re.cztime DESC LIMIT 0,1),'未回访') resultname
		 from 
		<include refid="tableName"></include> a 
		left join SYS_DICTIONARIES b on a.qytype=b.DICTIONARIES_ID
		left join tzxlb c on a.czman=c.zxyh
		where 1=1
		
		<if test="pd.tel!= null and pd.tel != ''"><!-- 关键词检索 -->
			and
				(
					a.tel LIKE CONCAT(CONCAT('%', #{pd.tel}),'%')
					or a.lxtel LIKE CONCAT(CONCAT('%', #{pd.tel}),'%')
				)
		</if>
		
		<if test="pd.qytype!= null and pd.qytype != ''"><!-- 关键词检索 -->
			and  a.qytype = #{pd.qytype} 
		</if>
		<if test="pd.starttime!=null and pd.starttime!=''"><!-- 开始时间检索 -->
			and a.czdate &gt;= #{pd.starttime} 
		</if>
		<if test="pd.endtime!=null and pd.endtime!=''"><!-- 结束时间检索 -->
			and a.czdate &lt;= #{pd.endtime} 
		</if>
		<if test="pd.name!= null and pd.name!= ''">
			and a.name LIKE CONCAT(CONCAT('%', #{pd.name}),'%')
		</if>
		<if test="pd.lxr!= null and pd.lxr!= ''">
			and a.lxr LIKE CONCAT(CONCAT('%', #{pd.lxr}),'%')
		</if>
		
		order by a.czdate desc	
	</select>
	
	
	<!-- 通过id获取数据 -->
	<select id="findByuid" parameterType="pd" resultType="pd">
			select
				a.uid,
				a.qytype,
				a.name,
				a.addr,
				a.email,
				a.lxr,
				a.tel,
				a.lxtel,
				a.bylxr,
				a.bylxtel,
				a.czman,
				a.isinsuran,
				a.intro,
				a.qzqd,
				DATE_FORMAT(a.czdate,"%Y-%m-%d %T") as czdate,
				b.name as qytypename,
				c.zxxm as czname,
		IFNULL((SELECT (CASE WHEN re.result='0' THEN '未回访' WHEN re.result IS NULL THEN '未回访' WHEN re.result='1' THEN '已回访' ELSE '未回访' END )
		FROM tesp_revrecord re WHERE re.uid IS NOT NULL  AND a.uid=re.uid ORDER BY re.cztime DESC LIMIT 0,1),'未回访') resultname
			 from
			<include refid="tableName"></include> a
			left join SYS_DICTIONARIES b on a.qytype=b.DICTIONARIES_ID
			left join tzxlb c on a.czman=c.zxyh
			where 1=1
				and a.uid = #{uid}
	</select>
	
	
	<!-- 通过id获取数据 -->
	<select id="findByTel" parameterType="pd" resultType="pd">
		select 
			a.uid,
			a.qytype,
			a.name,
			a.addr,
			a.email,
			a.lxr,
			a.tel,
			a.lxtel,
			a.bylxr,
			a.bylxtel,
			a.czman,
			a.isinsuran,
			a.intro,
			a.qzqd,
			DATE_FORMAT(a.czdate,"%Y-%m-%d %T") as czdate,
			b.name as qytypename,
			c.zxxm as czname
		 from 
		<include refid="tableName"></include> a 
		left join SYS_DICTIONARIES b on a.qytype=b.DICTIONARIES_ID
		left join tzxlb c on a.czman=c.zxyh
		where 1=1 and (a.tel = #{tel} or a.lxtel = #{tel} or a.bylxtel = #{tel} )
		
		order by  a.czdate desc limit 0,1
	</select>
	
	
	<!-- 列表 -->
	<select id="listGwfl" parameterType="pd" resultType="pd">
		select * from tesp_jobtype order by code	
	</select>
	
	
	<!-- 新增-->
	<insert id="saveTj" parameterType="pd">
		insert into tesp_tj
		(
			uid,
			regid,
			istj,
			czdate
		) values (
			#{uid},
			#{regid},
			'1',
			now()
		)
	</insert>
	
	
	<!-- 通过id获取数据 -->
	<select id="findTjByRegid" parameterType="pd" resultType="pd">
		select 
			*
		 from 
			tesp_tj a 
		where a.uid = #{uid} and regid=#{regid}
	</select>
	
	
	
	<!-- 新增-->
	<insert id="saveZczx" parameterType="pd">
		insert into tesp_zczx
		(
			zczxname,
			zczxtype,
			isjd,
			remark,
			uid,
			czman,
			czdate,
			fwcont,
			type
		) values (
			#{zczxname},
			#{zczxtype},
			#{isjd},
			#{remark},
			#{uid},
			#{czman},
			now(),
			#{fwcont},
			#{type}
		)
	</insert>
	
	
	<!-- 修改 -->
	<update id="editZczx" parameterType="pd">
		update
			tesp_zczx
		set 
  			zczxname=#{zczxname},
			zczxtype=#{zczxtype},
			isjd=#{isjd},
			remark=#{remark},
			fwcont=#{fwcont},
			czman=#{czman},
			czdate=now()
		where 
		id = #{id}
	</update>
	
	
		<!-- 通过id获取数据 -->
	<select id="findZczxByuidlistPage" parameterType="page" resultType="pd">
		select 
			a.id,
			a.uid,
			a.zczxname zczx,
			(SELECT `name` FROM sys_dictionaries WHERE DICTIONARIES_ID = a.zczxname) AS zczxname,
			a.zczxtype,
			a.isjd,
			a.remark,
			a.czman,
			a.fwcont,
			a.type,
			DATE_FORMAT(a.czdate,"%Y-%m-%d %T") as czdate,
			GROUP_CONCAT(b.name) as zczxtypename
		from 
		tesp_zczx a 
		left join SYS_DICTIONARIES b  ON FIND_IN_SET(b.DICTIONARIES_ID,a.zczxtype)
		where 1=1
			and a.uid = #{pd.uid}
			and a.type = #{pd.type}
		group by a.id	
	</select>
	
	
	<!-- 新增-->
	<insert id="saveYwyd" parameterType="pd">
	
		insert into tesp_ywyd
		(
			ywname,
			ydqd,
			isjd,
			remark,
			uid,
			czman,
			czdate,
			type
		) values (
			#{ywname},
			#{ydqd},
			#{isjd},
			#{remark},
			#{uid},
			#{czman},
			now(),
			#{type}
		)
	</insert>
	
	
	<!-- 修改 -->
	<update id="editYwyd" parameterType="pd">
		update
			tesp_ywyd
		set 
  			ywname=#{ywname},
			ydqd=#{ydqd},
			isjd=#{isjd},
			remark=#{remark},
			czman=#{czman},
			czdate=now()
		where 
		id = #{id}
	</update>
	
	
		<!-- 通过id获取数据 -->
	<select id="findYwydByuidlistPage" parameterType="page" resultType="pd">
		select 
			a.id,
			a.uid,
			a.ywname,
			a.ydqd,
			a.isjd,
			a.remark,
			a.czman,
			a.type,
			DATE_FORMAT(a.czdate,"%Y-%m-%d %T") as czdate,
			b.name as ydqdname,
			c.zxxm as czname
		from 
		tesp_ywyd a 
		left join SYS_DICTIONARIES b on a.ydqd=b.DICTIONARIES_ID
		left join tzxlb c on a.czman=c.zxyh		
		where 1=1
			and a.uid = #{pd.uid}
			and a.type = #{pd.type}
	</select>
	
	<!-- 新增-->
	<insert id="saveQtfw" parameterType="pd">
	
		insert into tesp_qtfw
		(
			fwname,
			fwtype,
			cljg,
			remark,
			uid,
			czman,
			czdate,
			type,
			isjd
		) values (
			#{fwname},
			#{fwtype},
			#{cljg},
			#{remark},
			#{uid},
			#{czman},
			now(),
			#{type},
			#{isjd}
		)
	</insert>
	
	
	<!-- 修改 -->
	<update id="editQtfw" parameterType="pd">
		update
			tesp_qtfw
		set 
  			fwname=#{fwname},
			fwtype=#{fwtype},
			cljg=#{cljg},
			remark=#{remark},
			czman=#{czman},
			czdate=now(),
			isjd=#{isjd}
		where 
		id = #{id}
	</update>
	
	
		<!-- 通过id获取数据 -->
	<select id="findQtfwByuidlistPage" parameterType="page" resultType="pd">
		select 
			a.id,
			a.uid,
			a.fwname,
			a.fwtype,
			a.cljg,
			a.remark,
			a.czman,
			a.type,
			a.isjd,
			DATE_FORMAT(a.czdate,"%Y-%m-%d %T") as czdate,
			b.name as fwtypename,
			c.zxxm as czname
		from 
		tesp_qtfw a 
		left join SYS_DICTIONARIES b on a.fwtype=b.DICTIONARIES_ID
		left join tzxlb c on a.czman=c.zxyh		
		where 1=1
			and a.uid = #{pd.uid}
			and a.type = #{pd.type}
	</select>
	
	
	<!-- 通过用工统计获取数据 -->
	<select id="ygtjlistPage" parameterType="page" resultType="pd">
	select ygtj.*,b.name as personqwxzname from (select a.uid,a.xl,a.id,a.jobname,a.jobtype,a.personuid,a.personname,a.age,a.personsex,a.personqwxz,a.persontel,f.name as xlname,a.jobxl,a.zy,a.jobaddr,a.regid,e.gwflname,d.name as jobtypename,t.istj,a.isinsuran,a.location from (SELECT emp.jobname,
		emp.id,
		emp.xl,
		emp.zyyq,
		emp.remark,
		emp.czman,
		emp.uid,
		emp.czdate,
		emp.zgrs,
		emp.sex,
		emp.agestart,
		emp.gzdy,
		emp.gwyq,
		emp.xlyq,
		emp.isvalid,
		emp.ageend,
		emp.isimpot,
		emp.gzaddr,
		emp.specificjobname,
		emp.experience,case emp.sex when '0' then '1,2' when '1' then '1' when '2' then '2' end as sex1,
		t.xl as jobxl,t.qwxz,t.sex as personsex,t.age,t.name as personname,t.uid as personuid,t.qwxz as personqwxz,t.tel as persontel,t.zy,t.jobaddr,t.id as regid,t.isinsuran,t.location,t.isjob,t.jobtype FROM tesp_employreg emp join (
		 SELECT a.*,b.sex,b.name,b.age,b.xl,b.lxtel as tel,b.zy,b.isinsuran,b.location,b.isjob FROM tesp_jobreg a left join tesp_person b on a.uid=b.uid where a.isvalid='1'
		) t  where emp.xl=t.xl and emp.jobtype=t.jobtype and emp.jobname=t.jobname and emp.gzdy=t.qwxz  and emp.ageend>=t.age and t.age>=emp.agestart and  emp.isvalid='1' and t.isjob='0'
		) a 
		left join tesp_jobtype e on a.jobname=e.code
				left join SYS_DICTIONARIES d on a.jobtype=d.DICTIONARIES_ID
			left join SYS_DICTIONARIES f on a.jobxl=f.DICTIONARIES_ID
				left join tesp_tj t on t.uid=a.uid and a.regid=t.regid
		where FIND_IN_SET(a.personsex,sex1) and a.uid = #{pd.uid}
		union 
		select a.uid,a.xl,a.id,a.jobname,a.jobtype,a.personuid,a.personname,a.age,a.personsex,a.personqwxz,a.persontel,f.name as xlname,a.jobxl,a.zy,a.jobaddr,a.regid,e.gwflname,d.name as jobtypename,t.istj,a.isinsuran,a.location from (SELECT
		emp.id,
		emp.jobname,
		emp.xl,
		emp.zyyq,
		emp.remark,
		emp.czman,
		emp.uid,
		emp.czdate,
		emp.zgrs,
		emp.sex,
		emp.agestart,
		emp.gzdy,
		emp.gwyq,
		emp.xlyq,
		emp.isvalid,
		emp.ageend,
		emp.isimpot,
		emp.gzaddr,
		emp.specificjobname,
		emp.experience,case emp.sex when '0' then '1,2' when '1' then '1' when '2' then '2' end as sex1,
		t.xl as jobxl,t.qwxz,t.sex as personsex,t.age,t.name as personname,t.uid as personuid,t.qwxz as personqwxz,t.tel as persontel,t.zy,t.jobaddr,t.id as regid,t.isinsuran,t.location,t.isjob,t.jobtype FROM tesp_employreg emp join (
		 SELECT a.*,b.sex,b.name,b.age,b.xl,b.lxtel as tel,b.zy,b.isinsuran,b.location,b.isjob FROM tesp_jobreg a left join tesp_person b on a.uid=b.uid where a.isvalid='1'
		) t   where  emp.jobname=t.jobname and  emp.isvalid='1' and t.isjob='0'
		) a 
		left join tesp_jobtype e on a.jobname=e.code
				left join SYS_DICTIONARIES d on a.jobtype=d.DICTIONARIES_ID
		left join SYS_DICTIONARIES f on a.jobxl=f.DICTIONARIES_ID
				left join tesp_tj t on t.uid=a.uid and a.regid=t.regid
		where   a.uid = #{pd.uid}
	) ygtj 
	left join SYS_DICTIONARIES b on ygtj.personqwxz=b.DICTIONARIES_ID
	where 1=1
		<if test="pd.name!= null and pd.name!= ''">
			and personname=#{pd.name}
		</if>
		<if test="pd.tel!= null and pd.tel!= ''">
			and persontel=#{pd.tel}
		</if>
		<if test="pd.agestart!= null and pd.agestart!= ''">
			and age &gt;= #{pd.agestart}
		</if>
		<if test="pd.ageend!= null and pd.ageend!= ''">
			and age &lt;= #{pd.ageend}
		</if>
		<if test="pd.sex!= null and pd.sex!= ''">
			and personsex=#{pd.sex}
		</if>
		<if test="pd.qwxz!= null and pd.qwxz!= ''">
			and personqwxz=#{pd.qwxz}
		</if>
		<if test="pd.xl!= null and pd.xl!= ''">
			and jobxl=#{pd.xl}
		</if>
		<if test="pd.jobname!= null and pd.jobname!= ''">
			and jobname=#{pd.jobname}
		</if>
		<if test="pd.jobaddr!= null and pd.jobaddr!= ''">
			and jobaddr  LIKE CONCAT(CONCAT('%', #{pd.jobaddr}),'%')
		</if>
	</select>


	<!-- 通过uid获取就业数据 -->
	<select id="jytjlistPage" parameterType="page" resultType="pd">
	select jytj.*,a.name as gzdyname  from (
		select a.*,e.gwflname,d.name as jobtypename,t.istj,f.name as xlname from (
		SELECT emp.gzaddr,emp.regid,emp.sex1,emp.name as
		companyname,emp.addr,emp.email,emp.lxr,emp.lxtel,emp.gzdy,emp.xl,emp.gwyq,emp.agestart,emp.ageend,a.id,a.jobname,a.jobtype,b.name,b.sex,b.uid,emp.remark FROM
		tesp_jobreg a
		left join tesp_person b on a.uid=b.uid
		join (select t.*,b.name,b.addr,b.lxtel,b.email,b.lxr,case t.sex when '0' then '1,2' when '1' then '1'
		when '2' then '2' end as sex1,t.id as regid from tesp_employreg t left join
		tesp_company b on t.uid=b.uid where t.isvalid='1') emp
		where emp.xl=b.xl and emp.jobtype=a.jobtype and emp.jobname=a.jobname and
		emp.gzdy=a.qwxz and emp.ageend>=b.age and b.age>=emp.agestart and a.isvalid='1'
		) a
			left join tesp_jobtype e on a.jobname=e.code
			left join SYS_DICTIONARIES d on a.jobtype=d.DICTIONARIES_ID
			left join tesp_tj t on t.uid=a.uid and a.regid=t.regid
		left join SYS_DICTIONARIES f on a.xl=f.DICTIONARIES_ID
		where FIND_IN_SET(a.sex,a.sex1)  and a.uid=#{pd.uid}
		union
		select a.*,e.gwflname,d.name as jobtypename,t.istj,f.name as xlname from (
		SELECT emp.gzaddr,emp.regid,emp.sex1,emp.name as
		companyname,emp.addr,emp.email,emp.lxr,emp.lxtel,emp.gzdy,emp.xl,emp.gwyq,emp.agestart,emp.ageend,a.id,a.jobname,a.jobtype,b.name,b.sex,b.uid,emp.remark FROM
		tesp_jobreg a
		left join tesp_person b on a.uid=b.uid
		join (select t.*,b.name,b.addr,b.lxtel,b.email,b.lxr,case t.sex when '0' then '1,2' when '1' then '1'
		when '2' then '2' end as sex1,t.id as regid from tesp_employreg t left join
		tesp_company b on t.uid=b.uid where t.isvalid='1') emp
			where emp.jobname=a.jobname and a.uid=#{pd.uid} and a.isvalid='1'
		) a left join tesp_jobtype e on a.jobname=e.code 
		left join SYS_DICTIONARIES d on a.jobtype=d.DICTIONARIES_ID
		left join SYS_DICTIONARIES f on a.xl=f.DICTIONARIES_ID
		left join tesp_tj t on t.uid=a.uid and a.regid=t.regid where a.uid =  #{pd.uid}
	) jytj 
	left join SYS_DICTIONARIES a on jytj.gzdy=a.DICTIONARIES_ID
	where 1=1
		<if test="pd.name!= null and pd.name!= ''">
			and companyname=#{pd.name}
		</if>
		<if test="pd.tel!= null and pd.tel!= ''">
			and lxtel=#{pd.tel}
		</if>
		<if test="pd.agestart!= null and pd.agestart!= ''">
			and agestart &gt;= #{pd.agestart}
		</if>
		<if test="pd.ageend!= null and pd.ageend!= ''">
			and ageend &lt;= #{pd.ageend}
		</if>
		<if test="pd.sex!= null and pd.sex!= ''">
			and sex=#{pd.sex}
		</if>
		<if test="pd.gzdy!= null and pd.gzdy!= ''">
			and gzdy=#{pd.gzdy}
		</if>
		<if test="pd.xl!= null and pd.xl!= ''">
			and xl=#{pd.xl}
		</if>
		<if test="pd.jobname!= null and pd.jobname!= ''">
			and jobname=#{pd.jobname}
		</if>
        <if test="pd.gzaddr!= null and pd.gzaddr!= ''">
            and gzaddr LIKE CONCAT(CONCAT('%', #{pd.gzaddr}),'%')
		</if>
	</select>
	
	
	
	<!-- 新增-->
	<insert id="saveRecord" parameterType="pd">
		insert into 
		tesp_pk_record
		(
			uid,ucid
		) values (
			#{uid},#{ucid}
		)
	</insert>
	
	<!-- 通过id获取数据 -->
	<select id="findRecordByuid" parameterType="pd" resultType="pd">
		select 
			*
		 from 
		tesp_pk_record a 
		where 1=1
			and a.uid = #{uid}
			and a.ucid=#{ucid}
	</select>

<!--	就业推荐-->
    <select id="tecjytjlistPage" resultType="pd" parameterType="Page">
select jytj.* from (
        select a.*, e.gwflname, d.name as jobtypename, t.istj, f.name as xlname, g.name as gzdyname
        from (
        SELECT emp.gzaddr,
               emp.regid,
               emp.sex1,
               emp.name as
                   companyname,
               emp.addr,
               emp.email,
               emp.lxr,
               emp.lxtel,
               emp.gzdy,
               emp.xl,
               emp.gwyq,
               emp.agestart,
               emp.ageend,
               a.id,
               a.jobname,
               a.jobtype,
				emp.czdate,
               b.name,
               b.sex,
               b.uid,
               emp.remark
        FROM tesp_jobreg a
                 left join tesp_person b on a.uid = b.uid
                 join (select t.*,
                              b.name,
                              b.addr,
                              b.lxtel,
                              b.email,
                              b.lxr,
                              (case
                                  when t.sex='0' then '1,2'
                                  when t.sex='1' then '1'
                                  when t.sex='2' then '2' end) as sex1,
                              t.id                      as regid
                       from tesp_employreg t
                                left join
                            tesp_company b on t.uid = b.uid
                       where t.isvalid = '1') emp
                where 1=1
         <if test="pd.queryname==null or pd.queryname==''">
             and emp.ageend >= b.age
             and b.age >= emp.agestart
             and FIND_IN_SET(b.sex, emp.sex1)
			 AND emp.jobname = a.jobname
         </if>
         <if test="pd.andxl==0" >
             and emp.xl = b.xl
         </if>
         <if test="pd.andage==0" >
             and emp.ageend >= b.age
             and b.age >= emp.agestart
         </if>
         <if test="pd.andzyyq==0" >
             and (b.zy like concat(concat('%',emp.zyyq),'%') or emp.zyyq like concat(concat('%',b.zy),'%'))
         </if>
         <if test="pd.andjobname==0" >
             and emp.jobname = a.jobname
         </if>
         <if test="pd.andjobtype==0" >
             and emp.jobtype = a.jobtype
         </if>
         <if test="pd.andgzdy==0" >
             and emp.gzdy = a.qwxz
         </if>

         <if test="pd.andsex==0" >
             and FIND_IN_SET(b.sex, emp.sex1)
         </if>
         <if test="pd.andjobaddr==0" >
             and (a.jobaddr like concat(concat('%',emp.gzaddr),'%') or emp.gzaddr like concat(concat('%',a.jobaddr),'%'))
         </if>
        <if test="pd.andspecificjobname==0" >
            and (a.specificjobname like concat(concat('%',emp.specificjobname),'%') or emp.specificjobname like concat(concat('%',a.specificjobname),'%'))
        </if>
        and(
        1=1
        <if test="pd.orxl==0" >
            or emp.xl = b.xl
        </if>
        <if test="pd.orage==0" >
            or (
             emp.ageend >= b.age
            and b.age >= emp.agestart
            )
        </if>
        <if test="pd.orzyyq==0" >
            or (b.zy like concat(concat('%',emp.zyyq),'%') or emp.zyyq like concat(concat('%',b.zy),'%'))
        </if>
        <if test="pd.orjobname==0" >
            or emp.jobname = a.jobname
        </if>
        <if test="pd.orjobtype==0" >
            or emp.jobtype = a.jobtype
        </if>
        <if test="pd.orgzdy==0" >
            or emp.gzdy = a.qwxz
        </if>
        <if test="pd.orsex==0" >
            or FIND_IN_SET(b.sex, emp.sex1)
        </if>
        <if test="pd.orjobaddr==0" >
            or (a.jobaddr like concat(concat('%',emp.gzaddr),'%') or emp.gzaddr like concat(concat('%',a.jobaddr),'%'))
        </if>
        <if test="pd.orspecificjobname==0" >
            or (a.specificjobname like concat(concat('%',emp.specificjobname),'%') or emp.specificjobname like concat(concat('%',a.specificjobname),'%'))
        </if>
        )
                  and b.isjob=0
                  and a.isvalid = '1'
                  and emp.isvalid = '1'
        <if test="pd.uid!= null and pd.uid!= ''">
            and a.uid = #{pd.uid}
        </if>

            )a
                 left join tesp_jobtype e on a.jobname = e.code
                 left join SYS_DICTIONARIES d on a.jobtype = d.DICTIONARIES_ID
                 left join tesp_tj t on t.uid = a.uid and a.regid = t.regid
                 left join SYS_DICTIONARIES f on a.xl = f.DICTIONARIES_ID
                 left join SYS_DICTIONARIES g on a.gzdy = g.DICTIONARIES_ID
                 where 1=1
        <if test="pd.uid!= null and pd.uid!= ''">
            and a.uid = #{pd.uid}
        </if>

                 ) jytj where 1=1
        <if test="pd.name!= null and pd.name!= ''">
            and companyname=#{pd.name}
        </if>
        <if test="pd.tel!= null and pd.tel!= ''">
            and lxtel=#{pd.tel}
        </if>
        <if test="pd.agestart!= null and pd.agestart!= ''">
            and agestart &gt;= #{pd.agestart}
        </if>
        <if test="pd.ageend!= null and pd.ageend!= ''">
            and ageend &lt;= #{pd.ageend}
        </if>
        <if test="pd.sex!= null and pd.sex!= ''">
            and sex=#{pd.sex}
        </if>
        <if test="pd.gzdy!= null and pd.gzdy!= ''">
            and gzdy=#{pd.gzdy}
        </if>
        <if test="pd.xl!= null and pd.xl!= ''">
            and xl=#{pd.xl}
        </if>
        <if test="pd.jobname!= null and pd.jobname!= ''">
            and jobname=#{pd.jobname}
        </if>
        <if test="pd.gzaddr!= null and pd.gzaddr!= ''">
            and gzaddr LIKE CONCAT(CONCAT('%', #{pd.gzaddr}),'%')
        </if>
    </select>

    <select id="tecygdjlistPage" parameterType="Page" resultType="pd">
select ygtj.*
from (select a.uid,
             a.xl,
             a.id,
             a.jobname,
             a.jobtype,
             a.personuid,
             a.personname,
             a.age,
             a.personsex,
             a.personqwxz,
             a.persontel,
             f.name as xlname,
             a.jobxl,
             a.zy,
             a.jobaddr,
             a.regid,
             e.gwflname,
             d.name as jobtypename,

             t.istj,
             a.isinsuran,
             a.location
      from (SELECT emp.jobname,
                   emp.id,
                   emp.xl,
                   emp.zyyq,
                   emp.remark,
                   emp.czman,
                   emp.uid,
                   emp.czdate,
                   emp.zgrs,
                   emp.sex,
                   emp.agestart,
                   emp.gzdy,
                   emp.gwyq,
                   emp.xlyq,
                   emp.isvalid,
                   emp.ageend,
                   emp.isimpot,
                   emp.gzaddr,
                   emp.specificjobname,
                   emp.experience,
                   case emp.sex when '0' then '1,2' when '1' then '1' when '2' then '2' end as sex1,
                   t.xl                                                                     as jobxl,
                   t.qwxz,
                   t.sex                                                                    as personsex,
                   t.age,
                   t.name                                                                   as personname,
                   t.uid                                                                    as personuid,
                   t.qwxz                                                                   as personqwxz,
                   t.tel                                                                    as persontel,
                   t.zy,
                   t.jobaddr,
                   t.id                                                                     as regid,
                   t.isinsuran,
                   t.location,
                   t.isjob,
                   t.jobtype
            FROM tesp_employreg emp
                     join (
                SELECT a.*,
                       b.sex,
                       b.name,
                       b.age,
                       b.xl,
                       b.lxtel as tel,
                       b.zy,
                       b.isinsuran,
                       b.location,
                       b.isjob
                FROM tesp_jobreg a
                         left join tesp_person b on a.uid = b.uid
                where a.isvalid = '1'
            ) t
            where 1=1
        <if test="pd.queryname==null or pd.queryname==''">
            and emp.ageend >= t.age
            and t.age >= emp.agestart
            and  FIND_IN_SET(t.sex, (case when emp.sex='0' then '1,2' when emp.sex='1' then '1' when emp.sex='2' then '2' else '' end))
			and emp.jobname=t.jobname
        </if>
        <if test="pd.andxl==0" >
            and emp.xl = t.xl
        </if>
        <if test="pd.andage==0" >
            and emp.ageend >= t.age
            and t.age >= emp.agestart
        </if>
        <if test="pd.andzyyq==0" >
            and (t.zy like concat(concat('%',emp.zyyq),'%') or emp.zyyq like concat(concat('%',t.zy),'%'))
        </if>
        <if test="pd.andjobname==0" >
            and emp.jobname = t.jobname
        </if>
        <if test="pd.andjobtype==0" >
            and emp.jobtype = t.jobtype
        </if>
        <if test="pd.andgzdy==0" >
            and emp.gzdy = t.qwxz
        </if>

        <if test="pd.andsex==0" >
            and  FIND_IN_SET(t.sex, (case when emp.sex='0' then '1,2' when emp.sex='1' then '1' when emp.sex='2' then '2' else '' end))
        </if>
        <if test="pd.andjobaddr==0" >
            and (t.jobaddr like concat(concat('%',emp.gzaddr),'%') or emp.gzaddr like concat(concat('%',t.jobaddr),'%'))
        </if>
        <if test="pd.andspecificjobname==0" >
            and (t.specificjobname like concat(concat('%',emp.specificjobname),'%') or emp.specificjobname like concat(concat('%',t.specificjobname),'%'))
        </if>
        and(
        1=1
        <if test="pd.orxl==0" >
            and emp.xl = t.xl
        </if>
        <if test="pd.orage==0" >
            or (
            emp.ageend >= t.age
            and t.age >= emp.agestart
            )
        </if>
        <if test="pd.orzyyq==0" >
            or (t.zy like concat(concat('%',emp.zyyq),'%') or emp.zyyq like concat(concat('%',t.zy),'%'))
        </if>
        <if test="pd.orjobname==0" >
            or emp.jobname = t.jobname
        </if>
        <if test="pd.orjobtype==0" >
            or emp.jobtype = t.jobtype
        </if>
        <if test="pd.orgzdy==0" >
            or emp.gzdy = t.qwxz
        </if>
        <if test="pd.orsex==0" >
            or FIND_IN_SET(t.sex, (case when emp.sex='0' then '1,2' when emp.sex='1' then '1' when emp.sex='2' then '2' else '' end))
        </if>
        <if test="pd.orjobaddr==0" >
            or (t.jobaddr like concat(concat('%',emp.gzaddr),'%') or emp.gzaddr like concat(concat('%',t.jobaddr),'%'))
        </if>
        <if test="pd.orspecificjobname==0" >
            or (t.specificjobname like concat(concat('%',emp.specificjobname),'%') or emp.specificjobname like concat(concat('%',ta.specificjobname),'%'))
        </if>
        )

              and t.isvalid = '1'
              and emp.isvalid = '1'
              and t.isjob = '0'
           ) a
               left join tesp_jobtype e on a.jobname = e.code
               left join SYS_DICTIONARIES d on a.jobtype = d.DICTIONARIES_ID
               left join SYS_DICTIONARIES f on a.jobxl = f.DICTIONARIES_ID
               left join tesp_tj t on t.uid = a.uid and a.regid = t.regid
               left join SYS_DICTIONARIES g on a.qwxz = g.DICTIONARIES_ID
      where 1=1
        <if test="pd.uid!= null and pd.uid!= ''">
            and a.uid = #{pd.uid}
        </if>
     ) ygtj
        where 1=1
        <if test="pd.name!= null and pd.name!= ''">
            and personname=#{pd.name}
        </if>
        <if test="pd.tel!= null and pd.tel!= ''">
            and persontel=#{pd.tel}
        </if>
        <if test="pd.agestart!= null and pd.agestart!= ''">
            and age &gt;= #{pd.agestart}
        </if>
        <if test="pd.ageend!= null and pd.ageend!= ''">
            and age &lt;= #{pd.ageend}
        </if>
        <if test="pd.sex!= null and pd.sex!= ''">
            and personsex=#{pd.sex}
        </if>
        <if test="pd.qwxz!= null and pd.qwxz!= ''">
            and personqwxz=#{pd.qwxz}
        </if>
        <if test="pd.xl!= null and pd.xl!= ''">
            and jobxl=#{pd.xl}
        </if>
        <if test="pd.jobname!= null and pd.jobname!= ''">
            and jobname=#{pd.jobname}
        </if>
        <if test="pd.jobaddr!= null and pd.jobaddr!= ''">
            and jobaddr  LIKE CONCAT(CONCAT('%', #{pd.jobaddr}),'%')
        </if>
    </select>

	<delete id="deleteJobMatching" parameterType="pd">
		delete from tesp_jobmatching
	</delete>

	<insert id="insertJobMatching" parameterType="pd">
		INSERT INTO tesp_jobmatching SELECT jytj.* FROM (
        SELECT a.*, e.gwflname, d.name AS jobtypename, t.istj, f.name AS xlname, g.name AS gzdyname
        FROM (
        SELECT emp.gzaddr,
               emp.regid,
               emp.sex1,
               emp.name AS
                   companyname,
               emp.addr,
               emp.email,
               emp.lxr,
               emp.lxtel,
               emp.gzdy,
               emp.xl,
               emp.gwyq,
               emp.agestart,
               emp.ageend,
               emp.czdate,
               a.id,
               a.jobname,
               a.jobtype,
               b.name,
               b.sex,
               b.uid,
               emp.remark
        FROM tesp_jobreg a
                 LEFT JOIN tesp_person b ON a.uid = b.uid
                 JOIN (SELECT t.*,
                              b.name,
                              b.addr,
                              b.lxtel,
                              b.email,
                              b.lxr,
                              (CASE
                                  WHEN t.sex='0' THEN '1,2'
                                  WHEN t.sex='1' THEN '1'
                                  WHEN t.sex='2' THEN '2' END) AS sex1,
                              t.id                      AS regid
                       FROM tesp_employreg t
                                LEFT JOIN
                            tesp_company b ON t.uid = b.uid
                       WHERE t.isvalid = '1') emp
                WHERE 1=1

             AND emp.ageend >= b.age
             AND b.age >= emp.agestart
             AND FIND_IN_SET(b.sex, emp.sex1)
             AND emp.jobname = a.jobname


                  AND b.isjob=0
                  AND a.isvalid = '1'
                  AND emp.isvalid = '1'

            )a
                 LEFT JOIN tesp_jobtype e ON a.jobname = e.code
                 LEFT JOIN SYS_DICTIONARIES d ON a.jobtype = d.DICTIONARIES_ID
                 LEFT JOIN tesp_tj t ON t.uid = a.uid AND a.regid = t.regid
                 LEFT JOIN SYS_DICTIONARIES f ON a.xl = f.DICTIONARIES_ID
                 LEFT JOIN SYS_DICTIONARIES g ON a.gzdy = g.DICTIONARIES_ID
                 WHERE 1=1
                 ) jytj WHERE 1=1


                 ORDER BY czdate DESC
	</insert>


	<delete id="deleteEmpMatching" parameterType="pd">
		delete from tesp_empmatching
	</delete>

	<insert id="insertEmpMatching" parameterType="pd">
		INSERT INTO tesp_empmatching SELECT ygtj.*
		FROM (SELECT a.uid,
		a.xl,
		a.id,
		a.jobname,
		a.jobtype,
		a.personuid,
		a.personname,
		a.age,
		a.personsex,
		a.personqwxz,
		a.persontel,
		f.name AS xlname,
		a.jobxl,
		a.zy,
		a.jobaddr,
		a.regid,
		e.gwflname,
		d.name AS jobtypename,

		t.istj,
		a.isinsuran,
		a.location,
		a.czdate

		FROM (SELECT emp.jobname,
		emp.id,
		emp.xl,
		emp.zyyq,
		emp.remark,
		emp.czman,
		emp.uid,
		emp.zgrs,
		emp.sex,
		emp.agestart,
		emp.gzdy,
		emp.gwyq,
		emp.xlyq,
		emp.isvalid,
		emp.ageend,
		emp.isimpot,
		emp.gzaddr,
		emp.specificjobname,
		emp.experience,
		CASE emp.sex WHEN '0' THEN '1,2' WHEN '1' THEN '1' WHEN '2' THEN '2' END AS sex1,
		t.xl                                                                     AS jobxl,
		t.qwxz,
		t.sex                                                                    AS personsex,
		t.age,
		t.name                                                                   AS personname,
		t.uid                                                                    AS personuid,
		t.qwxz                                                                   AS personqwxz,
		t.tel                                                                    AS persontel,
		t.zy,
		t.jobaddr,
		t.id                                                                     AS regid,
		t.isinsuran,
		t.location,
		t.isjob,
		t.jobtype,
		t.czdate
		FROM tesp_employreg emp
		JOIN (
		SELECT a.*,
		b.sex,
		b.name,
		b.age,
		b.xl,
		b.lxtel AS tel,
		b.zy,
		b.isinsuran,
		b.location,
		b.isjob
		FROM tesp_jobreg a
		LEFT JOIN tesp_person b ON a.uid = b.uid
		WHERE a.isvalid = '1'
		) t
		WHERE 1=1

			AND emp.ageend >= t.age
			AND t.age >= emp.agestart
			AND  FIND_IN_SET(t.sex, (CASE WHEN emp.sex='0' THEN '1,2' WHEN emp.sex='1' THEN '1' WHEN emp.sex='2' THEN '2' ELSE '' END))
			AND emp.jobname = t.jobname



		AND t.isvalid = '1'
		AND emp.isvalid = '1'
		AND t.isjob = '0'
		) a
		LEFT JOIN tesp_jobtype e ON a.jobname = e.code
		LEFT JOIN SYS_DICTIONARIES d ON a.jobtype = d.DICTIONARIES_ID
		LEFT JOIN SYS_DICTIONARIES f ON a.jobxl = f.DICTIONARIES_ID
		LEFT JOIN tesp_tj t ON t.uid = a.uid AND a.regid = t.regid
		LEFT JOIN SYS_DICTIONARIES g ON a.qwxz = g.DICTIONARIES_ID
		WHERE 1=1
		) ygtj
		WHERE 1=1 ORDER BY czdate DESC
	</insert>

    <select id="queryList" resultType="pd" parameterType="pd">
        select * from tesp_querytable where 1=1
		<if test="condition!= null and condition!= ''">
			and querycondition=#{condition}
		</if>
    </select>
	<!-- 351412933 -->
</mapper>